user              www-data;
worker_processes  1;
error_log         /var/log/nginx/error.log;
pid               /var/run/nginx.pid;

#-----------------------------------------------------------------
# Events Module
#   http://wiki.nginx.org/NginxHttpEventsModule
#-----------------------------------------------------------------
events {
  worker_connections  1024;
}

#-----------------------------------------------------------------
# HTTP Core Module
#   http://wiki.nginx.org/NginxHttpCoreModule
#-----------------------------------------------------------------

http {
  include      /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile                on;
  keepalive_timeout       65;
  client_max_body_size    1000m;
  client_body_buffer_size 128k;

  ## Compression
  # src: http://www.devcha.com/2010/02/enable-gzip-compression-of-nginx.html
  gzip              on;
  gzip_http_version 1.1;
  gzip_comp_level   5;
  gzip_proxied      any;
  gzip_min_length   1100;
  gzip_buffers      16 8k;
  gzip_types text/plain text/html text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  # Some version of IE 6 don't handle compression well on some mime-types, so just disable for them
  gzip_disable "MSIE [1-6].(?!.*SV1)";

  # Set a vary header so downstream proxies don't send cached gzipped content to IE6
  gzip_vary on;


  server {
    listen             80;
    server_name       <%=node['nginx_unicorn']['server_name'] %>;
    rewrite ^(.*)     https://www.<%=node['nginx_unicorn']['server_name']%>$1 permanent;
  }

  ###########################################
  #  upstream server
  ###########################################
  upstream <%=node['nginx_unicorn']['proxy_server_name']%> {
    server <%=node['nginx_unicorn']['proxy_server_path']%>;
  }

  server {
    listen              80;
    server_name         www.<%=node['nginx_unicorn']['server_name'] %>;
    

    location / {
      if ($http_x_forwarded_proto != "https") {
        return 301 https://www.<%=node['nginx_unicorn']['server_name']%>$request_uri;
      }
      proxy_pass       http://<%=node['nginx_unicorn']['proxy_server_name']%>;    
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
    }
  }

  # Load config files from the /etc/nginx/conf.d directory
  include /etc/nginx/conf.d/*.conf;
}
